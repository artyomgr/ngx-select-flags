{"version":3,"file":"main.js","mappings":"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","sources":["./projects/example/src/app/app.component.ts","./projects/example/src/app/app.component.html","./projects/example/src/app/app.module.ts","./projects/example/src/environments/environment.ts","./projects/example/src/main.ts","./projects/ngx-flag-picker/src/lib/ngx-flag-picker/ngx-flag-picker.component.html","./projects/ngx-flag-picker/src/lib/ngx-flag-picker/ngx-flag-picker.component.ts","./projects/ngx-flag-picker/src/lib/ngx-flag-picker.module.ts","./projects/ngx-flag-picker/src/ngx-flag-picker.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  selectedCountryCode = 'be';\r\n  countryCodes = ['be', 'lu', 'de', 'bs', 'br', 'pt'];\r\n  customLabels = {\r\n    'be': 'Belgium',\r\n    'lu': 'Luxembourg',\r\n    'de': 'Germany',\r\n    'bs': 'Bahamas',\r\n    'br': 'Brazil',\r\n    'pt': 'Portugal'\r\n  };\r\n\r\n  changeSelectedCountryCode(value: string): void {\r\n    this.selectedCountryCode = value;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div>\r\n    <ngx-flag-picker\r\n      [selectedCountryCode]=\"selectedCountryCode\"\r\n      [countryCodes]=\"countryCodes\"\r\n      (changedCountryCode)=\"changeSelectedCountryCode($event)\">\r\n    </ngx-flag-picker>\r\n    <h4 class=\"parameter-text\">customLabels</h4>\r\n    <ngx-flag-picker\r\n      [selectedCountryCode]=\"selectedCountryCode\"\r\n      [countryCodes]=\"countryCodes\"\r\n      [customLabels]=\"customLabels\"\r\n      (changedCountryCode)=\"changeSelectedCountryCode($event)\">\r\n    </ngx-flag-picker>\r\n    <h4 class=\"parameter-text\">showFlags = false</h4>\r\n    <ngx-flag-picker\r\n      [selectedCountryCode]=\"selectedCountryCode\"\r\n      [countryCodes]=\"countryCodes\"\r\n      [showFlags]=\"false\"\r\n      (changedCountryCode)=\"changeSelectedCountryCode($event)\">\r\n    </ngx-flag-picker>\r\n    <h4 class=\"parameter-text\">showLabels = false</h4>\r\n    <ngx-flag-picker\r\n      [selectedCountryCode]=\"selectedCountryCode\"\r\n      [countryCodes]=\"countryCodes\"\r\n      [showLabels]=\"false\"\r\n      (changedCountryCode)=\"changeSelectedCountryCode($event)\">\r\n    </ngx-flag-picker>\r\n    <h4 class=\"parameter-text\">showArrow = false</h4>\r\n    <ngx-flag-picker\r\n      [selectedCountryCode]=\"selectedCountryCode\"\r\n      [countryCodes]=\"countryCodes\"\r\n      [showArrow]=\"false\"\r\n      (changedCountryCode)=\"changeSelectedCountryCode($event)\">\r\n    </ngx-flag-picker>\r\n    <h4 class=\"parameter-text\">Selected country code:</h4>\r\n    <h1>{{ selectedCountryCode }}</h1>\r\n  </div>\r\n  <hr />\r\n  <br />\r\n  <!-- github star button -->\r\n  <a\r\n    class=\"github-button\"\r\n    href=\"https://github.com/iamartyom/ngx-flag-picker\"\r\n    data-icon=\"octicon-star\"\r\n    data-size=\"large\"\r\n    data-show-count=\"true\"\r\n    aria-label=\"Star iamartyom/ngx-flag-picker on GitHub\">Star\r\n  </a>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { NgxFlagPickerModule } from 'ngx-flag-picker';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgxFlagPickerModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","<div class=\"select-flags\" #selectFlags>\r\n  <div class=\"country-flag\" tabindex=\"0\" (click)=\"toggleListCountryFlags()\">\r\n    <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ selectedCountryCode }}\"></span>\r\n    <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(selectedCountryCode) }}</span>\r\n    <span *ngIf=\"showArrow\">▾</span>\r\n  </div>\r\n  <div class=\"list-country-flags\" *ngIf=\"isShowListCountryFlags\">\r\n    <div class=\"country-flag\" tabindex=\"0\" *ngFor=\"let code of countryCodes\" (click)=\"changeSelectedCountryCode(code)\">\r\n      <span>\r\n        <span *ngIf=\"showFlags\" [ngClass]=\"{ 'flag-icon-margin-right': showLabels }\" class=\"flag-icon flag-icon-{{ code }}\"></span>\r\n        <span *ngIf=\"showLabels\" class=\"country-code\">{{ getCountryLabel(code) }}</span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, Renderer2, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-flag-picker',\r\n  templateUrl: './ngx-flag-picker.component.html',\r\n  styleUrls: ['./ngx-flag-picker.component.scss']\r\n})\r\nexport class NgxFlagPickerComponent {\r\n  @Input() selectedCountryCode: string;\r\n  @Input() countryCodes: string[];\r\n\r\n  @Input() customLabels: Record<string, string>;\r\n\r\n  @Input() showFlags = true;\r\n  @Input() showLabels = true;\r\n  @Input() showArrow = true;\r\n\r\n  @Output() changedCountryCode = new EventEmitter<string>();\r\n\r\n  @ViewChild('selectFlags') selectFlagsElementRef: ElementRef;\r\n\r\n  private _isShowListCountryFlags = false;\r\n  set isShowListCountryFlags(value: boolean) {\r\n    this._isShowListCountryFlags = value;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n  get isShowListCountryFlags(): boolean {\r\n    return this._isShowListCountryFlags;\r\n  }\r\n\r\n  outsideClickSelectFlags = () => {};\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  getCountryLabel(countryCode: string): string {\r\n    return (this.customLabels && this.customLabels[countryCode]) ?\r\n      this.customLabels[countryCode] :\r\n      countryCode ? countryCode.toUpperCase() : '';\r\n  }\r\n\r\n  public changeSelectedCountryCode(value: string): void {\r\n    this.selectedCountryCode = value;\r\n    this.closeListCountryFlags();\r\n    this.changedCountryCode.emit(this.selectedCountryCode);\r\n  }\r\n\r\n  public toggleListCountryFlags(): void {\r\n    if (this.isShowListCountryFlags) {\r\n      this.closeListCountryFlags();\r\n    } else {\r\n      this.openListCountryFlags();\r\n    }\r\n  }\r\n\r\n  private openListCountryFlags(): void {\r\n    this.isShowListCountryFlags = true;\r\n    this.subscribeOutsideClickSelectFlags();\r\n  }\r\n\r\n  private closeListCountryFlags(): void {\r\n    this.isShowListCountryFlags = false;\r\n    this.unsubscribeOutsideClickSelectFlags();\r\n  }\r\n\r\n  private subscribeOutsideClickSelectFlags(): void {\r\n    this.outsideClickSelectFlags = this.renderer.listen('document', 'click', (event) => {\r\n      if (!this.selectFlagsElementRef.nativeElement.contains(event.target)) {\r\n        this.closeListCountryFlags();\r\n      }\r\n    });\r\n  }\r\n\r\n  private unsubscribeOutsideClickSelectFlags(): void {\r\n    if (this.outsideClickSelectFlags) {\r\n      this.outsideClickSelectFlags();\r\n      this.outsideClickSelectFlags = undefined;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxFlagPickerComponent } from './ngx-flag-picker/ngx-flag-picker.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NgxFlagPickerComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    NgxFlagPickerComponent,\r\n  ]\r\n})\r\nexport class NgxFlagPickerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","ctx_r1","ctx_r2","code_r6","ctx_r8","NgxFlagPickerComponent_div_6_div_1_span_2_Template","NgxFlagPickerComponent_div_6_div_1_span_3_Template","ctx_r5","NgxFlagPickerComponent_div_6_div_1_Template","ctx_r4","NgxFlagPickerComponent","constructor","changeDetectorRef","renderer","showFlags","showLabels","showArrow","EventEmitter","_isShowListCountryFlags","isShowListCountryFlags","value","markForCheck","getCountryLabel","countryCode","customLabels","toUpperCase","changeSelectedCountryCode","selectedCountryCode","closeListCountryFlags","changedCountryCode","emit","toggleListCountryFlags","openListCountryFlags","subscribeOutsideClickSelectFlags","unsubscribeOutsideClickSelectFlags","outsideClickSelectFlags","listen","event","selectFlagsElementRef","nativeElement","contains","target","undefined","selectors","viewQuery","ctx","NgxFlagPickerComponent_span_3_Template","NgxFlagPickerComponent_span_4_Template","NgxFlagPickerComponent_span_5_Template","NgxFlagPickerComponent_div_6_Template","Component","template","styles","Input","countryCodes","Output","ViewChild","NgxFlagPickerModule","CommonModule","NgModule","args","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}